function y(){}function w(t,n){for(const e in n)t[e]=n[e];return t}function B(t){return!!t&&(typeof t=="object"||typeof t=="function")&&typeof t.then=="function"}function j(t){return t()}function F(){return Object.create(null)}function E(t){t.forEach(j)}function q(t){return typeof t=="function"}function P(t,n){return t!=t?n==n:t!==n||t&&typeof t=="object"||typeof t=="function"}let f;function S(t,n){return t===n?!0:(f||(f=document.createElement("a")),f.href=n,t===f.href)}function U(t){return Object.keys(t).length===0}function O(t,...n){if(t==null){for(const o of n)o(void 0);return y}const e=t.subscribe(...n);return e.unsubscribe?()=>e.unsubscribe():e}function C(t,n,e){t.$$.on_destroy.push(O(n,e))}function D(t,n,e,o){if(t){const r=m(t,n,e,o);return t[0](r)}}function m(t,n,e,o){return t[1]&&o?w(e.ctx.slice(),t[1](o(n))):e.ctx}function G(t,n,e,o){if(t[2]&&o){const r=t[2](o(e));if(n.dirty===void 0)return r;if(typeof r=="object"){const i=[],d=Math.max(n.dirty.length,r.length);for(let s=0;s<d;s+=1)i[s]=n.dirty[s]|r[s];return i}return n.dirty|r}return n.dirty}function H(t,n,e,o,r,i){if(r){const d=m(n,e,o,i);t.p(d,r)}}function I(t){if(t.ctx.length>32){const n=[],e=t.ctx.length/32;for(let o=0;o<e;o++)n[o]=-1;return n}return-1}function J(t){return t&&q(t.destroy)?t.destroy:y}let l;function _(t){l=t}function k(){if(!l)throw new Error("Function called outside component initialization");return l}function K(t){k().$$.on_mount.push(t)}function L(t){k().$$.after_update.push(t)}const a=[],g=[];let u=[];const p=[],x=Promise.resolve();let b=!1;function z(){b||(b=!0,x.then(v))}function N(){return z(),x}function M(t){u.push(t)}function Q(t){p.push(t)}const h=new Set;let c=0;function v(){if(c!==0)return;const t=l;do{try{for(;c<a.length;){const n=a[c];c++,_(n),A(n.$$)}}catch(n){throw a.length=0,c=0,n}for(_(null),a.length=0,c=0;g.length;)g.pop()();for(let n=0;n<u.length;n+=1){const e=u[n];h.has(e)||(h.add(e),e())}u.length=0}while(a.length);for(;p.length;)p.pop()();b=!1,h.clear(),_(t)}function A(t){if(t.fragment!==null){t.update(),E(t.before_update);const n=t.dirty;t.dirty=[-1],t.fragment&&t.fragment.p(t.ctx,n),t.after_update.forEach(M)}}function R(t){const n=[],e=[];u.forEach(o=>t.indexOf(o)===-1?n.push(o):e.push(o)),e.forEach(o=>o()),u=n}export{a as A,z as B,Q as a,g as b,C as c,S as d,J as e,_ as f,k as g,v as h,B as i,D as j,I as k,G as l,L as m,y as n,K as o,F as p,q,E as r,P as s,N as t,H as u,U as v,M as w,R as x,l as y,j as z};
